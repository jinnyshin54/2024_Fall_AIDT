{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"https://github.com/junkyuhufs/2024Fall_AI_AIDT/blob/main/Image_Processing.ipynb","timestamp":1731498565276}],"gpuType":"T4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","source":["#Image processing\n","\n","by virtue of Dr. Hosung Nam"],"metadata":{"id":"sS1YIkDYKPeU"}},{"cell_type":"markdown","source":["[Understanding RGB](https://www.w3schools.com/html/html_colors_rgb.asp)"],"metadata":{"id":"f0ldRN5CKTmp"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"hvVEN6vFKIKs"},"outputs":[],"source":["import cv2 # openCV (computer vision) package\n","from google.colab.patches import cv2_imshow # substitution for cv2.imshow\n","import matplotlib.pylab as plt"]},{"cell_type":"markdown","source":["OpenCV imread, imwrite and imshow indeed all work with the BGR order, so there is no need to change the order when you read an image with cv2.imread and then want to show it with cv2.imshow. While BGR is used consistently throughout OpenCV, most other image processing libraries use the RGB ordering. If you want to use matplotlib's imshow but read the image with OpenCV, you would need to convert from BGR to RGB."],"metadata":{"id":"MrZ39o5VKXPJ"}},{"cell_type":"markdown","source":["##download/save an image from Urls"],"metadata":{"id":"ydTyA84CKeTh"}},{"cell_type":"code","source":["import os\n","url = \"https://raw.githubusercontent.com/junkyuhufs/Class2023Spring/main/tiger.jpg\"\n","os.system(\"curl \" + url + \" > test.jpg\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5byPI7SoKaeZ","outputId":"4bb07240-484a-404e-a31e-20bfe81fd256"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":2}]},{"cell_type":"markdown","source":["##display image"],"metadata":{"id":"QUFPcNApKjvg"}},{"cell_type":"code","source":["image_bgr = cv2.imread('test.jpg')\n","cv2_imshow(image_bgr)"],"metadata":{"id":"buUWyb5NKm5R"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##display B, G, R channel"],"metadata":{"id":"9GxInn45KtkJ"}},{"cell_type":"code","source":["image_bgr"],"metadata":{"id":"o3-QtC7rKqLZ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(type(image_bgr))"],"metadata":{"id":"3Dr4HvVmKwt5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(image_bgr.shape) #BRG의 3차원 Matrix확인 가능 (B, G, R 각각 1장씩)"],"metadata":{"id":"w1ZvcQIbKzVJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["image_b = image_bgr.copy()\n","image_b[:,:,[1,2]] = 0   #(627, 1200, 3) 의 Matrix에서 마지막 3의 2,3번째를 0으로 교체 (Indexing))\n","cv2_imshow(image_b)"],"metadata":{"id":"Rki2xjvuK2C5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["image_g = image_bgr.copy()\n","image_g[:,:,[0,2]] = 0   #1,3번째 0으로 교체\n","cv2_imshow(image_g)"],"metadata":{"id":"NJ-OkFoKK4eo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["image_r = image_bgr.copy()\n","image_r[:,:,[0,1]] = 0   #1,2번째 0으로 교체\n","cv2_imshow(image_r)"],"metadata":{"id":"VErha-_hK62J"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#반전\n","image_inverse = 255 - image_bgr  #255는 BRG에서 최대값임 (https://www.w3schools.com/html/html_colors_rgb.asp)\n","cv2_imshow(image_inverse)"],"metadata":{"id":"hkwmqzTKK9Qh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#gray transformation (흑백이미지로 변환)\n","image_gray = cv2.cvtColor(image_bgr, cv2.COLOR_BGR2GRAY)\n","cv2_imshow(image_gray)"],"metadata":{"id":"GQsfBHD6K_cK"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Histogram을 이용하여 BRG에 담긴 각 성분의 숫자 탐색"],"metadata":{"id":"mgXcf13cLCAA"}},{"cell_type":"code","source":["# Display the histogram of R, G, B channel (그림이 b, g, r중 어떤 성향이 강한지 판단 가능)\n","color = ['b','g','r']\n","for i in range(len(color)):  #len(color)는 'b','g','r'이므로 3; 즉 len(3)과 동일\n","    histr = cv2.calcHist([image_bgr],[i],None,[255],[0,255]) # ([image], [nChannel], mask, [histSize], [range])\n","    plt.plot(histr, color = color[i])\n","    plt.xlim([0,255])"],"metadata":{"id":"OCM32RdOLFAI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Display the histogram of all the pixels in the color image (앞선 BRG개별을 합쳐놓은 것; 그림이 밝은 지, 어두운지 판단가능)\n","plt.hist(image_bgr.ravel(), bins = 256, range = [0,256])\n","plt.show()"],"metadata":{"id":"3a1HUJT5LHzK"},"execution_count":null,"outputs":[]}]}